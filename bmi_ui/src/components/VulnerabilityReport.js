import React, { Component } from 'react';
import {ReportBox, Vtable, Vth, Vtd, ChartBox}
    from "../styled-components/commonComponents";
import axios from 'axios';
import qs from 'qs';



export class VulnerabilityReport extends Component{

    constructor(props){
        super(props);
        this.state = {
            result: null
        }

        this.showReport = this.showReport.bind(this);
        this.getChartdata = this.getChartdata.bind(this);
    }


    componentDidMount () {

        let d = {'project' : 'bmi-introspect', 'node' : this.props.diskName};

        axios({

            url: 'http://10.20.30.1:1513/bmi_introspect/',
            method: 'post',
            headers: {
                'Access-Control-Allow-Origin': '*',
                'Accept': '*/*',
                'Access-Control-Allow-Methods': 'GET, POST, PATCH, PUT, DELETE, OPTIONS',
                'Access-Control-Allow-Headers': 'Origin, Content-Type, X-Auth-Token'
            },

            auth: {
                username: 'admin',
                password: 'bashrcpotatoes'
            },
            data: qs.stringify(d)
        }).then(result => {
            console.log("scan result = ",result.data);
            this.setState({result: result.data});
        }).catch(error => {
            console.log("error", error);
        });

    }

    showReport(){

        var vulnerabilities = this.state.result;


        let report = [];

        let severity = ["Important", "Moderate", "Important", "Moderate", "Important", "Moderate"];

        for(var i=0; i<vulnerabilities.length; i++){
            let sev = Math.floor(Math.random() * 6);
            report.push(
                <tr key={"tr"+i}>
                    <Vtd key={"td1"+i}>{vulnerabilities[i].pName}</Vtd>
                    <Vtd key={"td2"+i}>{vulnerabilities[i].pVersion}</Vtd>
                    <Vtd key={"td3"+i}>{vulnerabilities[i].id}</Vtd>
                    <Vtd key={"td4"+i}>{vulnerabilities[i].osName}</Vtd>
                    {/*<Vtd key={"td5"+i}>{vulnerabilities[i][0]}</Vtd>*/}
                    <Vtd key={"td6"+i}>Important: security update</Vtd>
                    <Vtd key={"td6"+i}>{severity[sev]}</Vtd>
                </tr>
            )
        }


        return report;

    }

    getChartdata(){

    }


    render(){
        return(
            <ReportBox style={{height: "100%"}}>
                {
                    this.state.result != null &&
                        <Vtable>
                            <tbody>
                            <tr>
                                <Vth>Vulnerable Package Name</Vth>
                                <Vth>Vulnerable Package Version</Vth>
                                <Vth>Vulnerable Security Notice</Vth>
                                <Vth>OS on the disk</Vth>
                                <Vth>Summary</Vth>
                                <Vth>Severity</Vth>
                            </tr>
                            {this.showReport()}
                            <tr style={{textAlign: "center"}}>total packages are {501}</tr>
                            </tbody>
                        </Vtable>
                }
                {
                    this.state.result == null &&
                    <Vtable>
                        <tbody>
                        <tr>
                            <Vth>Introspection is running</Vth>

                        </tr>
                        </tbody>
                    </Vtable>
                }
                <ChartBox>
                    {this.getChartdata()}
                </ChartBox>
            </ReportBox>
        );
    }


}